{"version":3,"sources":["logo.svg","components/spinner/index.jsx","components/pullToRefresh/util.js","components/pullToRefresh/index.jsx","pages/home/index.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Wheel","props","appendSpreadsheet","row","a","doc","sheet","sheetsById","addRow","console","error","state","selectedItem","selectItem","bind","this","GoogleSpreadsheet","process","useServiceAccountAuth","client_email","private_key","replace","loadInfo","log","title","Math","floor","random","items","length","onSelectItem","setState","web_client","timestamp","Date","spin_result_index","then","setTimeout","prevProps","reset","wheelVars","spinning","className","style","map","item","index","onClick","React","Component","isScrollable","element","direction","overflowType","getComputedStyle","overflowY","document","scrollingElement","isOverflowScrollable","scrollTop","clientHeight","scrollHeight","Error","isTreeScrollable","parentElement","containerRef","useRef","childrenRef","pullDownRef","pullToRefreshThresholdBreached","isDragging","startY","currentY","useEffect","current","addEventListener","onTouchStart","passive","onTouchMove","onEnd","body","removeEventListener","initContainer","requestAnimationFrame","overflowX","transform","opacity","classList","remove","e","MouseEvent","pageY","window","TouchEvent","touches","type","target","getBoundingClientRect","top","add","toString","overflow","visibility","onRefresh","ref","children","StyledContainer","Layout","Footer","styled","div","StyledDiv","StyledHeading","StyledDesctription","StyledHelp","Container","Item","Home","context","Promise","resolve","reject","places","backgroundColor","fontSize","color","margin","LeftOutlined","App","basename","exact","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.673a53e4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport { GoogleSpreadsheet } from 'google-spreadsheet';\nimport './styles.css';\n\nexport default class Wheel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.doc = null;\n    this.state = {\n      selectedItem: null,\n    };\n    this.selectItem = this.selectItem.bind(this);\n  }\n\n  async componentDidMount() {\n    this.doc = new GoogleSpreadsheet(process.env.REACT_APP_SPREADSHEET_ID);\n    await this.doc.useServiceAccountAuth({\n        client_email: process.env.REACT_APP_GAPI_EMAIL,\n        private_key: process.env.REACT_APP_GAPI_KEY.replace(/\\\\n/g, '\\n')\n    });\n    await this.doc.loadInfo();\n    console.log(this.doc.title);\n  }\n\n  selectItem() {\n    if (this.state.selectedItem === null) {\n      const selectedItem = Math.floor(Math.random() * this.props.items.length);\n      if (this.props.onSelectItem) {\n        this.props.onSelectItem(selectedItem);\n      }\n      this.setState({ selectedItem });\n      if (selectedItem) {\n        this.appendSpreadsheet({web_client: 'PWA', timestamp: new Date(), spin_result_index: selectedItem}).then(() => {\n            console.log('Data Saved');\n        }, () => {\n            console.log('Something went wrong');\n        })\n      }\n    } else {\n      this.setState({ selectedItem: null });\n      setTimeout(this.selectItem, 500);\n    }\n  }\n\n  appendSpreadsheet = async (row) => {\n    try {\n      if (!this.doc){\n          return;\n      }\n  \n      const sheet = this.doc.sheetsById[0];\n      const result = await sheet.addRow(row);\n    } catch (e) {\n      console.error('Error: ', e);\n    }\n  };\n\n\n  componentDidUpdate(prevProps) {\n      if (prevProps.reset !== this.props.reset && this.props.reset) {\n          this.setState({ selectedItem: null});\n      }\n  }\n\n  render() {\n    const { selectedItem } = this.state;\n    const { items } = this.props;\n\n    const wheelVars = {\n      '--nb-item': items.length,\n      '--selected-item': selectedItem,\n    };\n    const spinning = selectedItem !== null ? 'spinning' : '';\n\n    return (\n      <div className=\"wheel-container\">\n        <div className=\"pointer-back\"></div>\n        <div className=\"pointer\"></div>\n        <div className={`wheel ${spinning}`} style={wheelVars}>\n          {items.map((item, index) => (\n            <div className=\"wheel-item\" key={index} style={{ '--item-nb': index }}>\n              {item}\n            </div>\n          ))}\n        </div>\n\n        <div className='spin-button' onClick={this.selectItem}>Spin</div>\n      </div>\n    );\n  }\n}\n","function isOverflowScrollable(element) {\n    const overflowType = getComputedStyle(element).overflowY;\n    if (element === document.scrollingElement && overflowType === 'visible') {\n      return true;\n    }\n  \n    if (overflowType !== 'scroll' && overflowType !== 'auto') {\n      return false;\n    }\n  \n    return true;\n  }\n  \n  function isScrollable(element, direction) {\n    if (!isOverflowScrollable(element)) {\n      return false;\n    }\n  \n    if (direction === 0b01) {\n      const bottomScroll = element.scrollTop + element.clientHeight;\n      return bottomScroll < element.scrollHeight;\n    }\n  \n    if (direction === -0b01) {\n      return element.scrollTop > 0;\n    }\n  \n    throw new Error('unsupported direction');\n  }\n  \n  /**\n   * Returns whether a given element or any of its ancestors (up to rootElement) is scrollable in a given direction.\n   */\n  export function isTreeScrollable(element, direction) {\n    if (isScrollable(element, direction)) {\n      return true;\n    }\n  \n    if (element.parentElement == null) {\n      return false;\n    }\n  \n    return isTreeScrollable(element.parentElement, direction);\n  }","import React, { useRef, useEffect } from 'react';\nimport { isTreeScrollable } from './util';\nimport './styles.css';\n\nexport default (props)  => {\n  const containerRef = useRef(null);\n  const childrenRef = useRef(null);\n  const pullDownRef = useRef(null);\n  let pullToRefreshThresholdBreached = false;\n  let isDragging = false;\n  let startY = 0;\n  let currentY = 0;\n  let pullDownThreshold = 45;\n  let maxPullDownDistance = 95;\n\n  useEffect(() => {\n    if (!childrenRef || !childrenRef.current) return;\n    childrenRef.current.addEventListener('touchstart', onTouchStart, { passive: true });\n    childrenRef.current.addEventListener('mousedown', onTouchStart);\n    childrenRef.current.addEventListener('touchmove', onTouchMove, { passive: false });\n    childrenRef.current.addEventListener('mousemove', onTouchMove);\n    childrenRef.current.addEventListener('touchend', onEnd);\n    childrenRef.current.addEventListener('mouseup', onEnd);\n    document.body.addEventListener('mouseleave', onEnd);\n\n    return () => {\n      if (!childrenRef || !childrenRef.current) return;\n      childrenRef.current.removeEventListener('touchstart', onTouchStart);\n      childrenRef.current.removeEventListener('mousedown', onTouchStart);\n      childrenRef.current.removeEventListener('touchmove', onTouchMove);\n      childrenRef.current.removeEventListener('mousemove', onTouchMove);\n      childrenRef.current.removeEventListener('touchend', onEnd);\n      childrenRef.current.removeEventListener('mouseup', onEnd);\n      document.body.removeEventListener('mouseleave', onEnd);\n    };\n  }, []);\n\n  const initContainer = () => {\n    console.log('init');\n    requestAnimationFrame(() => {\n      if (childrenRef && childrenRef.current) {\n        childrenRef.current.style.overflowX = 'hidden';\n        childrenRef.current.style.overflowY = 'auto';\n        childrenRef.current.style.transform = `translate(0px, 0px)`;\n      }\n      if (pullDownRef && pullDownRef.current) {\n        pullDownRef.current.style.opacity = '0';\n      }\n      if (containerRef.current) {\n        containerRef.current.classList.remove('ptr--pull-down-treshold-breached');\n        containerRef.current.classList.remove('ptr--dragging');\n        containerRef.current.classList.remove('ptr--fetch-more-treshold-breached');\n      }\n\n      if (pullToRefreshThresholdBreached) pullToRefreshThresholdBreached = false;\n    });\n  };\n\n  const onTouchStart = (e) => {\n    isDragging = false;\n    if (e instanceof MouseEvent) {\n      startY = e.pageY;\n    }\n    if (window.TouchEvent && e instanceof TouchEvent) {\n      startY = e.touches[0].pageY;\n    }\n    currentY = startY;\n    // Check if element can be scrolled\n    if (e.type === 'touchstart' && isTreeScrollable(e.target, -0b01)) {\n      return;\n    }\n    // Top non visible so cancel\n    if (childrenRef.current.getBoundingClientRect().top < 0) {\n      return;\n    }\n    isDragging = true;\n  };\n\n  const onTouchMove = (e) => {\n    if (!isDragging) {\n      return;\n    }\n\n    if (window.TouchEvent && e instanceof TouchEvent) {\n      currentY = e.touches[0].pageY;\n    } else {\n      currentY = e.pageY;\n    }\n\n    containerRef.current.classList.add('ptr--dragging');\n\n    if (currentY < startY) {\n      isDragging = false;\n      return;\n    }\n\n    // Limit to trigger refresh has been breached\n    if (currentY - startY >= pullDownThreshold) {\n      isDragging = true;\n      pullToRefreshThresholdBreached = true;\n      containerRef.current.classList.remove('ptr--dragging');\n      containerRef.current.classList.add('ptr--pull-down-treshold-breached');\n    }\n\n    // maxPullDownDistance breached, stop the animation\n    if (currentY - startY > maxPullDownDistance) {\n      return;\n    }\n    pullDownRef.current.style.opacity = ((currentY - startY) / 65).toString();\n    childrenRef.current.style.overflow = 'visible';\n    childrenRef.current.style.transform = `translate(0px, ${currentY - startY}px)`;\n    pullDownRef.current.style.visibility = 'visible';\n  };\n\n  const onEnd = () => {\n    isDragging = false;\n    startY = 0;\n    currentY = 0;\n\n    // Container has not been dragged enough, put it back to it's initial state\n    if (!pullToRefreshThresholdBreached) {\n      if (pullDownRef.current) pullDownRef.current.style.visibility = 'hidden';\n      initContainer();\n      return;\n    }\n\n    if (childrenRef.current) {\n      childrenRef.current.style.overflow = 'visible';\n      childrenRef.current.style.transform = `translate(0px, ${pullDownThreshold}px)`;\n    }\n    props.onRefresh().then(initContainer());\n  };\n\n\n    return (\n      <div ref={containerRef}>\n\n        <div className=\"ptr__pull-down\" ref={pullDownRef}>\n        <div className=\"ptr__loader ptr__pull-down--loading\">Release to refresh</div>\n        <div className=\"ptr__pull-down--pull-more\">Pull Down To Refresh</div>\n        </div>\n          <div className=\"ptr__children\" ref={childrenRef}>\n            {props.children}\n          </div>\n      </div>\n    );\n}\n","import React, { Component, ReactNode } from 'react';\nimport styled from 'styled-components';\nimport { Skeleton, Popover, Layout } from 'antd';\nimport { InfoCircleFilled } from '@ant-design/icons';\nimport Wheel from '../../components/spinner';\nimport PullToRefresh from '../../components/pullToRefresh';\nimport { LeftOutlined   } from '@ant-design/icons';\n\nconst { Footer } = Layout;\nexport const StyledContainer = styled.div`\n  margin: 20px 0;\n  min-width: 358px;\n`;\n\nconst StyledDiv = styled.div`\n  /* position: absolute;\n  width: 320px;\n  height: 130px;\n  left: 20px;\n  top: 454px; */\n\n  background: #FFFFFF;\n  border-radius: 12px;\n  margin: 40px 20px 0 20px;\n  padding: 20px;\n`;\n\nconst StyledHeading = styled.div`\n  /* position: absolute;\n  width: 215px;\n  height: 48px;\n  left: 73px;\n  top: 474px; */\n\n  /* font-family: Metropolis; */\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  /* or 120% */\n\n  text-align: center;\n\n  color: #000000;\n`;\n\nconst StyledDesctription = styled.div`\n  /* position: absolute;\n  width: 267px;\n  height: 36px;\n  left: 43px;\n  top: 528px; */\n\n  /* font-family: Metropolis; */\n  font-style: normal;\n  font-weight: normal;\n  font-size: 12px;\n  line-height: 18px;\n  /* or 150% */\n  margin-top: 6px;\n  text-align: center;\n\n  color: rgba(0, 0, 0, 0.58);\n`;\n\nconst StyledHelp = styled.div`\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 14px;\n  /* identical to box height */\n\n\n  color: #000000;\n  text-align: center;\n  margin-top: 15px;\n`;\n\nconst Container = styled.div`\n    display: flex;\n`;\n\nconst Item = styled.div`\n    flex: 1;\n`;\n\nexport default class Home extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      reset: false,\n      places: ['Better luck next time!', '2X Savings', '₹100 Cashback', '₹20 💸', '₹50 💸', '1.5X Savings', '2X Savings', '₹50 💸']\n    };\n  }\n\n  onRefresh = () => {\n    console.log('On Refresh')\n    return new Promise((resolve, reject) => {\n      this.setState({\n        reset: true\n      }, resolve);\n      setTimeout(() => {\n        this.setState({\n          reset: false\n        })\n      }, 1000);\n    })\n    \n  }\n\n  render() {\n    return (\n      <div style={{backgroundColor: '#F7F6F3'}}>\n        <PullToRefresh onRefresh={this.onRefresh}>\n        <StyledContainer>\n        <Container>\n          <Item  style={{\n                    fontSize: 22,\n                    color: '#000000',\n                    margin: '20px 20px 50px 20px'\n            }} >\n            <LeftOutlined style={{color: '#1B1B1E'}}/> Your rewards\n          </Item>\n        </Container>\n        <Wheel reset={this.state.reset} items={this.state.places} />\n        <StyledDiv>\n          <StyledHeading>\n          Spin the wheel now to get rewarded\n          </StyledHeading>\n          <StyledDesctription>\n          Tap on Spin or rotate the wheel anti-clockwise and release to start spinning \n          </StyledDesctription>\n        </StyledDiv>\n        <StyledHelp>\n          Have a question? <font style={{color:'#F6C95D'}}>Get help</font>\n        </StyledHelp>\n        </StyledContainer>\n        </PullToRefresh>\n      </div>\n    );\n  }\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport Home from './pages/home';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n      <div>\n        <Switch>\n              <Route exact path='/' component={Home} />=\n        </Switch>\n      </div>\n    </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}